{"summary": "results code is described to identify all primer and probe combinations from a list of unpaired candidates that should produce a product. it predicts and extracts all amplicon sequences in a large sequence database from a list of primers and probes. degenerate bases are allowed and entire amplicon sequences are extracted and annotated with gene information. simulate_PCR software is described to calculate possible primer pairings and products of PCR (primer only) or primer + probe triplet reactions (as in TaqMan\u00ae or Luminex\u00ae) in either single-plex or complex multiplex reactions, as compared to a large sequence database. simulator_PCR is the only software that finds all possible primer pairings predicted to result in a product from an unordered, unpaired list of primer and probe candidates. the csPCR program does predict amplicons from multiplexed primers. it must be run from a GUI, making it unfeasible for large scale unix/linux applications. simulation_PCR ran in a few seconds, but never finished after several hours. simulate_PCR is an open source, command line Perl script that calls the BLAST[9] programs makeblastdb, blastn, and blastdbcmd. it can be run after multiplex degenerate primer and probe design using software such as PriMux[10]. sensitivity is to modify the \u2013word_size option. by setting the simulate_PCR \u2013mux option to 0 the code predicts specific forward-reverse primer pairings as a singleplex PCR or primer/probe triplet reaction. output files contain predicted targets hit, amplicon sequence, length, position, primer and probe combination, number of degenerate bases and mismatches per primer/probe, probe position on amplicon, probe on plus or minus strand, and gene annotations overlapping the amplicon. results from each mismatch count are shown in separate files. primer and probes were predicted for 3 target sets: 547 Coronaviridae genomes; 2) 1809 HIV-1 genomes; 3) 9 antibiotic resistance gene sequences. primers and probes were designed using the run_Primux_triplet script from PriMux. bsiella pneumoniae SHV-133 Klebsiella pneumoniae blaSHV-72 Klebsiella pneumoniae NDM1 Approach The script simulate_PCR predicts PCR amplicons from a sequence database given primers and probes. amplicons calculated from primer-database sequence matches with no more than the allowable number of mismatches that are in the correct orientation and distance. primers listed as \u201c|F\u201d must act as forward primers and as \u201c|R\u201d as reverse primers, while in the mux setting either may act as forward and/or reverse. paired setting checks for 16 possible priming reactions and reports hits to either probe. output files contain predicted targets hit, amplicon sequence, length, position, primer and probe combination, number of degenerate bases and mismatches per primer/probe, probe on plus or minus strand, and gene annotations overlapping the amplicon. amplicon_distribution files list all forward/reverse primer pairs and probe triplets with the number of sequences each is predicted to detect. primers and probes were designed using the run_Primux_triplet script from PriMux (https://sourceforge.net/projects/primux), with the options in Additional file 1. primers and probes for HIV are provided in Additional file 2, for Coronaviridae in Additional file 3. ulate_PCR predicted over 12,000 unique database sequences amplified from nt from the combined set of primers and probes. all of the database sequences amplified are HIV except some synthetic constructs and vectors and 3 SIV sequences. a single 18-24-mer with up to 3 mismatches is likely to match many sequences. one amplicon from a glaucous-winged gull was predicted if a single mismatch in the forward primer was allowed. the run took just over a minute against the Coronaviridae genomes database. simulate_PCR is a command line script, so can be run as part of a pipeline where a GUI is not suitable. a simple script called simulate_PCR is described to identify combinations of primer pairs and primer/probe triplets that detect database sequences. the tool allows a user to specify desired pairings, or with the \u201cmux\u201d setting it checks all combinations of primers and probes. using a k-mer index algorithm to find primer binding sites could improve speed and sensitivity, but requires large amounts of RAM for large sequence databases. BLAST heuristics may fail to report all matches to short oligos if degenerate bases break matches below the word length of 4. a command line Perl script was developed to predict products from single- or multiplex degenerate PCR or TaqMan\u00ae/Luminex\u00ae reactions compared against large sequence databases. we use this code daily to predict the specificity and target inclusivity of molecular diagnostic signatures and multiplexes for target enrichment prior to sequencing. auspices This work performed under the auspices of the U.S. Department of Energy by Lawrence Livermore National Laboratory under contract DE-AC52-07NA27344."}