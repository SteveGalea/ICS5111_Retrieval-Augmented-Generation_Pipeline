{"summary": "the prediction accuracy and efficiency of three different chunking methods is widely studied. the prediction accuracy and efficiency of three different chunking methods can yield better accuracy than predicting the secondary structure using the RNA sequence as a whole. our previous research shows that cutting long sequences into shorter chunks can yield better accuracy than predicting the entire secondary structure using the predicted chunk structures. background RNA molecules Ribonucleic acid (RNA) is made up of four types of nucleotide bases. a sequence of these bases is strung together to form a single-stranded RNA molecule. RNA plays important roles in many biological processes including gene expression and regulation. regulation [4] must contain at least one inversion, i.e., a string of nucleotides followed closely by its inverse complementary sequence. the 6-nucleotide string \"ACCGCA\" followed by its inverse complementary sequence \"UGCGGU\" s may not be the most favorable structures for carrying out the biological functions of RNA. local structures formed by pairings between nucleotides in close proximity may better correlate with the real molecular structure of long RNA sequences. if proven correct, our approach will open the door to a new generation of programs based on segmenting long RNA sequences. the map function takes as input a key and values pair k2, list(v2), performs the reduce function, and outputs a list of values. the reduce function takes as input a key and values pair k2, list(v2), performs the reduce function, and outputs a list of values - i.e., Reduce k2, list(v2) list v3. RNA molecules Ribonucleic acid (RNA) is made up of four types of nucleotide bases. a sequence of these bases is strung together to form a single-stranded RNA molecule. RNA molecules vary greatly in size, ranging from nineteen nucleotide bases in microRNAs. -loops and pseudoknots must contain at least one inversion, i.e., string of nucleotides followed closely by its inverse complementary sequence. RNA secondary structure predictions Secondary structures are crucial for the RNA functionality and therefore the prediction of the secondary structures is widely studied. our current work suggests that local structures formed by pairings between nucleotides in close proximity may better correlate with the real molecular structure of long RNA sequences. if proven correct, our approach will open the door to a new generation of programs based on segmenting long RNA sequences into shorter chunks. the map function takes as input a key and values pair k2, list(v2), performs the reduce function, and outputs a list of values. the reduce function takes as input a key and values pair k2, list(v2), performs the reduce function, and outputs a list of values - i.e., Reduce k2, list(v2) list v3. RNA-Seq analysis tool for the estimation of gene expression levels and genomic variant calling [15] and Langmead et al. designed a next-generation sequencing tool based on MapReduce Hadoop [16]. to the best of our knowledge, our work is the first one to adapt MapReduce into secondary structure predictions of long RNA sequences. chunking step relies on a general excursion approach first formulated in [19] the problem calls for identifying high concentration regions of a certain property in nucleotide bases of biomolecular sequences. the excursion method requires assigning a positive score to each nucleotide. a nucleotide base is included in an inversion identified by the InversFinder program. if not, it is assigned a value of \"0\" each \"1\" in the binary sequence is given a score of 1, and each \"0\" a negative score of s is determined as follows. an excursion starts at a point i where Ei is zero, continues with a number of rising and falling stretches of positive values, and ends at j > i where j is the next position with Ej = 0. The score then stays at zero until it becomes positive again when the next excursion begins. the centered method cuts the sequence by identifying inversions and building the chunks around them. the algorithm stops either when all the peaks are exhausted or when all the inversion regions of the sequence have been included in the chunks. the algorithm stops when all the peaks are exhausted or when all the inversion regions of the sequence have been included in the chunks. the sequence segment is segmented into six chunks using the centered chunking method. labels 1 through 6 represent the six segments with decreasing order of peak excursion scores. the peak with the highest excursion score is considered first. the highest peak is found at Position 297 with peak bottom at 257. we reduce Chunk 3 to Positions 101 - 151. the process continues for the remaining Chunks 4 - 6. Figure 7. Example of chunking with centered method. the optimized method produced only 5 chunks covering all except the first 18 positions of the sequence. chunks produced by the optimized method cover only 96.3% of the sequence, leaving out those parts of the sequence where no inversions are found. we use the same prediction algorithms to predict the entire sequence without chunking. the programs that predict pseudoknotted and non-pseudoknotted sequences are UNAFOLD (2008) and RNAfold (1994). the programs that predict both pseudoknotted and non-pseudoknotted sequences are IPknot (2011), pknotsRG (2007), HotKnots (2004), and PKNOTS(1998). RF00209_A sequence and its experimental secondary structure from RFAM database. bases that are hydrogen bonded with other bases are represented by a \":\" (colon) a matching pair of \"(\" and \") indicates that the bases at those positions are paired to be part of a secondary structure. a good chunking method would cause only a minimal loss of prediction accuracy after cutting the sequence. in many cases the AR values turn out to be greater than 1, meaning that secondary structure predicted using chunking is more similar to the real structure than it is the secondary structure predicted by using the whole sequence. each mapper performs the prediction on one or more chunks using a certain prediction program. each mapper outputs the list of k2, v2 pairs as the intermediate output to reduce. the k2 is the ID of the whole secondary structure to which the predicted chunk belongs. the reducer outputs the final results as a list(v3) in which v3 is the AR for reconstructed structures. each mapper runs the chunking process on an RNA sequence with a given set of parameter values and then predicts one or multiple chunks. the granularity of the mapping can vary based on the number of chunks each mapper is assigned to predict. each mapper explores one branch of the tree and generates the set of segments as the output of the chunking program. the mapper predicts one or more segments generated based on the number of segments each mapper is assigned. adapted version of the \"Palindrome\" program is available for download at http://rnavlab.utep.edu. the original program works correctly on DNA but not RNA sequences. the original program works correctly on DNA but does not support G-U pairing. a nucleotide base is included in an inversion identified by the InversFinder program. each \"1\" in the binary sequence is given a score of 1, and each \"0\" a negative score of s. we require that the expected score per base = p + q * s to be negative. an excursion starts at a point i where Ei is zero, continues with a number of rising and falling stretches of positive values, and ends at j > i where j is the next position with Ej = 0. The score then stays at zero until it becomes positive again when the next excursion begins. the algorithm stops either when all the peaks are exhausted or when all the inversion regions of the sequence have been included in the chunks. the algorithm stops either when all the peaks are exhausted or when all the inversion regions of the sequence have been included in the chunks. the sequence segment is segmented into six chunks using the centered chunking method. labels 1 through 6 represent the six segments with decreasing order of peak excursion scores. the peak with the highest excursion score is considered first. the highest peak is found at Position 297 with peak bottom at 257. priority to the chunk with the higher number of bases within completely contained inversions. we reduce Chunk 3 to Positions 101 - 151. the process continues for the remaining Chunks 4 - 6. the optimized method produced only 5 chunks covering all except the first 18 positions of the sequence. this method avoids cutting into those segments with rising excursion scores preceding the peaks. the chunks produced by the optimized method cover only 96.3% of the sequence. the centered method cuts the sequence by identifying inversions and building the chunks around them. the algorithm stops either when all the peaks are exhausted or when all the inversion regions of the sequence have been included in the chunks. the sequence segment is segmented into six chunks using the centered chunking method. the sequence segment is segmented into six chunks using the centered chunking method. labels 1 through 6 represent the six segments with decreasing order of peak excursion scores. the peak with the highest excursion score is considered first. this peak produces a chunk from Positions 52 to 151, overlapping with Chunk 2. we reduce Chunk 3 to positions 101 - 151. the process continues for the remaining Chunks 4 - 6. the optimized method produced only 5 chunks covering all except the first 18 positions of the sequence. the chunks produced by the optimized method cover only 96.3% of the sequence, leaving out those parts where no inversions are found. RF00209_A is cut into four chunks positioned at 1 - 100, 101 - 200, 201 - 300, and 301 - 379. we use the same prediction algorithms to predict the entire sequence without chunking. unpaired nucleotide bases are represented by a \":\" (colon) a matching pair of \"(\" and \")\" indicates that the bases at those positions are paired to be part of a secondary structure. a good chunking method would cause only a minimal loss of prediction accuracy after cutting the sequence. in many cases the AR values turn out to be greater than 1, meaning that secondary structure predicted using chunking is more similar to the real structure than it is the secondary structure predicted by using the whole sequence. an example of an MR job is shown in the circled part of Figure 3.b. for a sequence and a combination of parameters, the mappers perform the chunking and predictions. each mapper cuts the sequence according to the chunking parameters values in the chunking step by identifying a variable number of chunks. the reducer outputs the final results as a list(v3) in which v3 is the AR for reconstructed structures. each mapper runs the chunking process on an RNA sequence with a given set of parameter values and then predicts one or multiple chunks. the granularity of the mapping can vary based on the number of chunks each mapper is assigned to predict. each mapper explores one branch of the chunking tree and generates the set of segments as the output of the chunking program. the mapper predicts one or more segments generated based on the number of segments each mapper is assigned. fine-grained mappers predict one chunk at a time. each mapper explores one branch of the tree and generates the set of segments as the output of the chunking program. the mapper predicts one or more segments generated based on the number of segments each mapper is assigned. there are no large datasets of experimentally determined RNA secondary structures including pseudoknots. to study the framework performance, we use a smaller dataset of longer sequences (i.e., 14 RNA sequences from the virus family Nodaviridae) for which the secondary structures are not known. the use of the MapReduce framework is vital for the exhaustive exploration of the tree branches. the inversion based chunking methods (C and O) outperform the nave chunking method (R) the inversion based chunking methods (C and O) outperform the nave chunking method (R), and whether there is any difference in accuracy between the two datasets. the AC value for a predicted RNA structure is the percentage of agreement between the known structure and the predicted structure when the whole sequence is used. a larger AC value means that the chunk-based predicted structure is more similar to the real structure. the MAC value for a sequence is the maximum AC value. the mean MAR is significantly greater than 1 with p-value > 0.05. t-test shows means, standard deviations, and p-values for the non-pseudoknotted and pseudoknotted sequences respectively. the average prediction accuracy attained with segmentation is not significantly less than that without. with the inversion based C and O chunking methods, one of the mean MAR values falls below 1 to 0.93. the average prediction accuracy attained with segmentation is at least as good as, and often even better than those without segmentation. MAR values for IPknot on non-pseudoknotted sequences have been examined. no statistically significant negative correlation has been detected in any of these plots. 0.0532 0.0666 -0.1331 p 0.2604 0.9249 0.9676 0.8340 0.7928 0.5986 PKNOTS r 0.4598 0.7053 0.7045 -0.0233 0.1001 0.0597 p 0.0008 0.0000 0.0000 0.0000 0.9294 0.7023 0.8199 UNAFold r -0.1449 -0.1055 -0.1311 p 0.3155 0.4658 0.3643 RNAfold the Friedman test is a non-parametric statistical test based on rank sums. the method producing the lowest MAR is given a rank of 1 and the method producing the highest MAR is given a rank of 3. The ranks are averaged for ties. pknotsRG 1.82E-07 5.27E-01 1.86E-06 9.72E-06 3.65E-06 1.84E-02 1.08E-04 9.62E-05 HotKnots 8.80E-09 6.47E-01 4.20E-07 5.36E-07 2.47E-05 1.84E-02 1.30E-03 1.62E-04 NUPACK 5.16E-09 2.17E-01 5.79E-08 1.41E-06 3.70E-04 5. our current investigations focus on the following two questions. first, we want to study how we should choose the parameters c, L, and G to maximize the accuracy retention. some of the results have been reported in preliminary work of the group [12,13] the correlation coefficient is found to be positive 0.11, against the expectation of a negative correlation. we anticipate that this line of investigation will require more coordinated efforts with the developers of the various prediction programs to establish appropriate ways of computing the free energies of any given predicted-or experimentally-determined structure. RNA2 (1311), nodamura virus (NoV) RNA2 (1336), black beetle virus (BBV) RNA2 (1393), Flock House virus (1421), Epinephelus tauvina nervous necrosis virus (ETNNV) RNA2 (1433), BoV RNA1 (3096), PaV RNA1 (3011), BBV RNA1 (3099), ETNNV RNA1 (3103), FHV RNA1 (3107 in each subfigure there are three groups of times, one for each maximum chunk length. each group lists the 14 sequences sorted based on their length in nucleotide bases. Figure 17.a presents the times and number of map tasks when the coarse-grained MR implementation and the optimized method are used. table 6 quantifies the similarity for both subgroups (i.e. RNA2 and RNA1) which is within 3%. execution times of fine-grained mapping when using the optimized chunking method for both subgroups are 11%. graph 8 shows the average number of chunks (i.e., map tasks) for both subgroups using centered and optimized methods. the optimized method tends to cut sequences into fewer chunks. this leads to fewer map tasks and shorter MapReduce total times. speedup of coarse-grained mapping over fine-grained mapping decreases from 3.75 to 1.38. speedup of coarse-grained mapping over fine-grained mapping decreases from 3.4 to 1.25. for RNA1 it decreases from 6.82 to 1.93. box-and-whisker diagram of total MR times for each subgroup of Nodaviridae sequences (RNA2 and RNA1) using centered and optimized methods with maximum chunk length of 60, 150, and 300. this suggests potentially for larger maximum chunk length and sequence lengths the fine-grained mapping can outperform the coarse-grained mapping in terms of performance. the average map efficiency for coarse-grained mapping decreases from 36% to 25% on RNA2 and from 18% to 15% on RNA1 when using centered or optimized methods. the average map efficiency for fine-grained mapping decreases from 36% to 25% on RNA2 and from 18% to 15% on RNA1. mapping decreases from 91% to 79% on RNA2 and from 97% to 93% on RNA1. centered and optimized chunking methods tend to produce more chunks with shorter chunk lengths when using a maximum chunk length of 60. diverse chunk lengths within a prediction can also cause inefficiency. number of chunks and chunk lengths for the Nodamura virus (NoV) RNA2 with maximum chunk length of 60 bases. results suggest the best set of parameters to achieve higher accuracy, performance, and efficiency depend on multiple aspects including the input sequence and the available resources. the second dataset, compiled from the RFAM and Pseudobase++ databases, consists of 23 pseudoknotted sequences. the lengths of the sequences in this dataset range from 77 to 451 bases. to study the framework performance, we use a smaller dataset of longer sequences for which the secondary structures are not known. MAC and MAW for chunking methods (R,C,O) for 50 sequences. MAC and MAW values obtained using prediction programs IPknot, pknotsRG, hotKnots, NUPACK, PKNOTS, RNAfold. the AC value for a predicted RNA structure is the percentage of agreement between the known structure and the predicted structure when the whole sequence is used. a larger AC value means that the chunk-based predicted structure is more similar to the real structure. the MAC value for a sequence is the maximum AC value. the mean MAR turns out to be greater than 1 with p-value > 0.05. table 1 and 2 displays the means, standard deviations, and p-values for the non-pseudoknotted and pseudoknotted sequences respectively. the average prediction accuracy attained with segmentation is not significantly less than that without. with the inversion based C and O chunking method, one of the mean MAR values falls below 1 to 0.93. a decline in accuracy retention would imply a decline in accuracy retention. MAR values for IPknot on non-pseudoknotted sequences. similar scatter plots for other prediction programs have also been examined. no statistically significant negative correlation has been detected. 7618 0.6982 NUPACK r -0.1622 -0.0137 -0.0059 -0.0532 0.0666 -0.1331 p 0.2604 0.9249 0.9676 0.8340 0.7928 0.5986 PKNOTS r 0.4598 0.7053 0.7045 -0.0233 0.1001 0.0597 p 0.0008 0.0000 0.0000 0.0000 0.9294 0.7023 0.8199. pknotsRG 6.3 71.5 22.3 115.5 21.3 113.0 2.0 30.0 7.0 50.0 14.0 58.0 HotKnots 4.0 68.0 22.0 115.5 24.0 116.5 1.0 32.0 6.0 47.0 16.0 59.0 NUPACK 4.0 68.5 17.0 115.5 29.0 120.0 1.3 24.5 7.3 40.5 9.3 PKNOTS. pknotsRG 1.82E-07 5.27E-01 1.86E-06 9.72E-06 3.65E-06 1.84E-02 1.08E-04 9.62E-05 HotKnots 8.80E-09 6.47E-01 4.20E-07 5.36E-07 2.47E-05 1.84E-02 1.30E-03 1.62E-04 NUPACK 5.16E-09 2.17E-01 5.79E-08 1.41E-06 3.70E-04 5. our current investigations focus on the following two questions. first, we want to study how we should choose the parameters c, L, and G to maximize the accuracy retention. some of the results have been reported in preliminary work of the group [12,13] a scatter plot of prediction accuracy versus free energy of different predicted structures of the sequence RF0002_A is shown in Figure 16. the correlation coefficient is found to be positive 0.11, which is against the expectation of a negative correlation. this line of investigation will require more coordinated efforts with the developers of the various prediction programs to establish appropriate ways of computing the free energies of any given predicted-or experimentally-determined structure. RNA2 (1305 nucleotide bases), Pariacoto virus (PaV) RNA2 (1311), nodamura virus (NoV) RNA2 (1336), black beetle virus (BBV) RNA2 (1393), Flock House virus (FHV) RNA2 (1400), Epinephelus tauvina nervous necrosis virus (ETNNV) RNA2 (1433), BoV RNA1 (3096), PaV RNA each subfigure shows the total times in seconds for exploring the prediction trees and the number of map tasks for the 14 sequences when a maximum chunk length of 60, 150, and 300 bases is used. in each subfigure there are three groups of times, one for each maximum chunk length. in each subfigure there are three groups of times, one for each maximum chunk length. the number of chunks equals the number of map tasks and depends on the number of inversions identified in the chunking process. table 6 quantifies the similarity for both subgroups (i.e. RNA2 and RNA1) which is within 3%. rained mapping for both subgroups (RNA2 and RNA1) is 11% to 18% slower than using the centered method. the optimized method tends to cut sequences into fewer chunks, which leads to fewer map tasks and shorter MapReduce total times. this observation is different from previous work in which the centered method results in shorter execution times due to the same reason we mentioned above [17]. grained mapping results in shorter execution time compared to fine-grained mapping. speedup of coarse-grained mapping over fine-grained mapping decreases from 3.75 to 1.38. speedup of coarse-grained mapping over fine-grained mapping decreases from 3.75 to 1.38. for RNA1 it decreases from 7.86 to 2.37. the average total times increase with the maximum chunk length at the rate of 2.0 for RNA2 and 2.4 for RNA1. this suggests potentially for larger maximum chunk length and sequence lengths the fine-grained mapping can outperform the coarse-grained mapping in terms of performance. Figure 19 shows how fine-grained mapping reaches better efficiency compared to coarse-grained mapping. the average map efficiency for coarse-grained mapping decreases from 36% to 25% on RNA2 and from 18% to 18%. the average map efficiency for fine-grained mapping decreases from 91% to 79% on RNA2 and from 97% to 93% on RNA1. this is due to the fact that the centered and optimized chunking methods tend to produce more chunks with shorter chunk lengths when using a maximum chunk length of 60. the same methods tend to produce fewer chunks each with longer lengths. Figure 20. Profile of Nodamura virus (NoV) RNA2 with maximum chunk length 60. number of chunks and chunk lengths for the Nodamura virus (NoV) RNA2 with centered and optimized methods and maximum chunk length of 300 bases. MT oversaw the mapReduce implementation and performance analysis. all authors reviewed and participated in finalizing the manuscript."}