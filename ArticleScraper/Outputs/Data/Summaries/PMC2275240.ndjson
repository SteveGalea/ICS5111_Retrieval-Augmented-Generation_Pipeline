{"summary": "simulation software, Epigrass, aims to help design and simulating network-epidemic models with any kind of node behavior. the results show that the topological context of the starting point of the epidemic is of great importance from both control and preventive perspectives. networks with discrete-state nodes have nodes characterized by a discrete variable representing its epidemiological status. networks with continuous-state nodes have nodes characterized by a discrete variable representing its epidemiological status. networks with discrete-state nodes have nodes characterized by a discrete variable representing its epidemiological status. epigrass is a platform for network epidemiological simulation and analysis. it is designed towards facilitating the construction and simulation of large scale metapopulational models. each component population of such a metapopulational model is assumed to be connected through a contact network. this connectivity model can be easily adapted to represent any type of adjacency structure. entire model and all other objects representing the graph, sites and edges can be constructed. a code representation of the real system can be constructed, where nodes (representing people or localities) and contact routes are instances of node and edge objects. the epigrass system is driven by a graphical user interface(GUI) it manages the simulation and output generation. it parses the model specification files, contained in a text file (.epg file), and builds the network from site and edge description files (comma separated values text files, CSV) this module requires a LATEX installation to work. reports are most useful for general verification of expected model behavior. but the source files generated by the module may serve as templates. epigrass is entirely written in the Python language, which contributes greatly to the flexibility of the whole system due to the dynamical nature of the language. the geo-referenced networks over which epidemiological processes take place can be very straightforwardly represented in a object-oriented framework. the nodes and edges of the geographical networks are objects with their own attributes and methods. a collection of built-in epidemic models can be readily used for the intra-node dynamics (SIR model family) user-defined models can be developed in just a few lines of Python code. all simulations in Epigrass are done in discrete-time. the KML file can also be viewed in Google EarthTM or Google MapsTM. the \".epg\" file is normally modified from templates included with Epigrass. a network can be defined as a set of nodes and links where nodes represent cities and links represents transportation routes. the example network was built from 76 of largest cities of Brazil (>= 100 k habs) the number of edges in the network, derived from the bus routes, is 850. the parameters used were taken from Lipsitch et al. (2003) to represent a disease like SARS with an estimated basic reproduction number (R0) of 2.2 to 3.6 (Table 1). Parameters used in the models and their meaning. the annual number of passengers is used to derive an average daily number of passengers simply by dividing it by 365. the number of new cases is drawn from a Poisson distribution with intensity ( I t + t) and the number of infected individuals visiting i is modelled as binomial process. delay associated with the duration of each bus trip was calculated as the number of days that a bus would take to complete a given trip. the model was run 500 times, randomizing the point of entry of the virus. the seeding site was chosen with a probability proportional to the log10 of their population size. for every simulation, statistics about each site such as the time it got infected and time series of incidence were saved. the epidemiological scenario is one of the invasion of a new influenza-like virus. one possible objective of this model is to understand how the spread of such a disease may be affected by the point-of-entry of the disease in the network. the parameters used were taken from Lipsitch et al. (2003) [12] to represent a disease like SARS with an estimated basic reproduction number (R0) of 2.2 to 3.6 (Table 1). Parameter n and have their values derived stochatically during the simularion. the annual number of passengers is used to derive an average daily number of passengers simply by dividing it by 365. the number of new cases is drawn from a Poisson distribution with intensity ( I t + t) and the number of infected individuals visiting i is modelled as binomial process. delay associated with the duration of each bus trip was calculated as the number of days that a bus, traveling at an average speed of 60 km/h, would take to complete a given trip. the model was run 500 times, randomizing the point of entry of the virus. the seeding site was chosen with a probability proportional to the log10 of their population size. for every simulation, statistics about each site such as the time it got infected and time series of incidence were saved. the model presented here, took 2.6 seconds for a 100 days run, on a 2.1 GHz cpu. a somewhat larger model with 343 sites and 8735 edges took 28 seconds for a 100 days simulation. despite that, some features of the simulated epidemic are worth discussing. figures 6 and 7 show cost benefit plots for three vaccination strategies investigated. top-3 degree sites only and top-10 degree sites only. Vaccination of higher order sites offer cost/benefit advantages only in scenarios where the disease enter the network through one of these sites. figure 8 shows the tree for the dispersion from the city of Salvador. Figure 9. Effect of degree(a) and betweeness(b) of entry node on the speed of the epidemic. Vaccination strategies must take into consideration network topology. CTC contributed with model definition and analysis, as well as with writing the manuscript. OGC, contributed with data analysis and writing the manuscript."}