{"summary": "an array must query a fully representative set of sequences from the species' pan-genome. unbiased tiling of probes across the entire length of the genome is the most flexible design approach. however, such a whole-genome tiling requires that the genome sequence is known in advance. DNA microarrays are widely used for the detection and comparative analysis of microbial species. a viral genotyping microarray was one of the methods used to etiologically link severe acute respiratory syndrome to a novel coronavirus. the offset between probes is the distance between the start of one probe and the start of the next. the top figure illustrates a gapped tiling and the middle an end-to-end tiling. overlapping arrays are capable of identifying polymorphism at a much finer resolution than gapped arrays. single-genome arrays can only detect and analyze sequences similar to those included on the array, and cannot discover or analyze sequences absent in the reference strain. the pan-genome hypothesis states that any given species has two sets of genes. a gene-centric design includes only coding sequences. a whole-genome tiling is preferable for applications that require more flexibility. a whole-genome tiling is preferable for applications that require more flexibility. pan-genome tiling array design minimizes the number of probes required. a single probe may match to multiple locations (genomes) of the pan-genome. the problem is to find a minimum cardinality subset H P. s are used to tile the left and right of both genomes, and distinct probes are used to tile the two polymorphism variants. the problem becomes more difficult as the number of genomes and complexity of polymorphisms increases. the methods presented in this paper were developed to aid the design of a pan-genome tiling array for Listeria monocytogenes. es strain would require 125,000 probes, meaning the PanArray design covers 20 more genomes using only 3 more probes. a description of this design, along with array designs for six other bacterial pan-genomes is given in the Results section. minimum Hitting Set is the problem of selecting the minimum cardinality subset H P such that H contains at least one element from each subset in F. a probe candidate p P is said to hit a window w W if a match between p and a substring of G begins in the interval w. a minimum hitting set H of F is a minimum cardinality subset of probes H P. each window of the pan-genome is hit by at least one probe in H. a probe p hits a window if a match between p and G begins within the window's interval. the panArray implementation can optionally use inexact matches containing a single mismatch. the implementation uses a fast, but memory intensive, compressed keyword tree. to index the 1-mismatch hits, each probe's 3k possible 1-mimsatch permutations are added to the index as well. a naive algorithm for finding a small hitting set H is to choose a probe hitting the window that also hits the most other windows. only a single probe is needed to cover a window, so after selecting a probe p, all other probes that hit a window in Wp will see their effective coverage reduced. the panArray implementation exploits a property of the residual coverages that allows it to recompute only a few values at each iteration. a probe's coverage either remains the same, or decreases because one of its windows was hit by the prior iteration. instead of recomputing all residual coverages after each iteration, it is sufficient to maintain a priority queue of residual coverages. the annotation can be mapped onto the array after the design. this strategy allows for intergenic sequence and unannotated genomes to be included on the array. the updated annotation was easily remapped onto the array. the average distance between adjacent targets is expected to be equal to the window length. for any other window length l, the depth of coverage c is expected to be c k/l. the extreme case being l = 1, which results in exactly k-fold coverage. highly repetitive probes can be identified by the number of genomic positions they map to, and should be discarded if they threaten to confound the array analysis. for expression or transcriptome arrays, forward and reverse strand probes must be considered independently. for single-stranded samples, the sequence to be synthesized for the array will need to be reversed complemented. p reduces the effective coverage of q to zero, because all of q's windows have already been covered by p. a greedy algorithm has since been shown to be essentially a best-possible approximation for the Minimum Hitting Set problem. a new rp value is computed for the front of the queue, marked as valid, and reinserted into the queue. this process is repeated until a valid residual returns to the front of the queue before the others have been updated. the greedy algorithm without this speedup takes days to complete, but with the speedup runs in a matter of seconds. probes are mapped to all annotation features with a coinciding location. the result is a many-to-many mapping with each feature being targeted. a single probe possibly targeting multiple features can be quickly recovered. a power law model was found to fit the L. monocytogenes data better than the originally proposed exponential model. the power law exponent was found to be 1.38 0.002 suggesting that the pan-genome is closed (i.e. has a finite number of genes), and the sequencing of more genomes would eventually sample the entire set of dispensable genes. hybridization of a 50-mer probe will tolerate a few mismatches. the window length was set to 24 bp, enforcing a maximum target offset of 48, an expected depth of coverage of about 50/24 = 2.08, and resulting in approximately 2.3 million windows. 99.2% of the probes target at most one location per genome. the most repetitive 15-mer occurs only 28 times per genome. the most repetitive 50-mer probe used in the design targets a \"cell wall surface anchor protein\" the naive algorithm chooses 1,739,242 probes, but is still well over the 385,000 probe limit. the Greedy panArray algorithm is comparable in runtime to the naive algorithms. sample \"reuse\" is measured in the average number of targets per probe. it is rare for a 50-mer probe to match to more than one location per genome. it is roughly equivalent to the average number of genomes that a probe matches. the highly conserved species of B. anthracis exhibits near perfect probe reuse. the number of probes required to tile the nine sequenced strains is nearly the same as is required to tile one strain. each probe targeting on average only 39% of the included strains. pan-genome is roughly equivalent in total number of pan-genome bases. the B. pseudomallei pan-genome is roughly equivalent in total number of pan-genome bases. seventeen of the eighteen L. monocytogenes genomes listed as annotated by NMPDR in Table 1 were used in the analysis. the addition of an Nth genome was simulated by searching the annotated genes of each genome against all possible permutations of N-1 other genomes. a power law model was found to fit the data better than the originally proposed exponential model. all 20 genomes listed in Table 1 were included in the design. a combined sequence length of 57,946,621 bp and 65,431 annotated genes were included. the design was constrained to a 385,000 feature NimbleGen array. the peak at Genomes = 1 in Figure 3 is for strain-specific probes. the peak around 2 and 9 is for lineage-specific probes. the peak around 20 is for species-specific probes that are conserved in all 20 L. monocytogenes genomes. modal offset equal to window length (24 bp) uneven distribution and pronounced mode is caused by non-random tie breaking. most targeted sequences exactly match their probe (75%) and the remainder match with a single mismatch (25%). additional arrays were designed for a total of seven bacterial pan-genomes. the species include: Francisella tularensis, Staphylococcus aureus, Bacillus anthracis, Vibrio cholerae, Burkholderia pseudomallei, Escherichia coli, and Shigella spp. L. monocytogenes 20 2.74 54.81 2,832,489 358,688 7.9 (0.39) V. cholerae 15 3.87 58.09 3,017,198 346,447 8.7 (0.58) B. pseudomallei 20 6.72 134.31 6,755,234 491,231 13.8 (0.69). a single probe may target multiple genomes in the species. the addition of each successive genome requires fewer new probes than the last. successive strains are added by order of lineage, from the bottom of Table 1 to the top, and the design is recomputed. the panArray algorithm described above is ideal for high-density tilings of overlapping or closely spaced probes. the results section has shown that this algorithm is applicable for all currently available bacterial pan-genomes. however, if the maximum number of probes is limited, it may be necessary to design a tiling with gaps between the probe targets. pan-genome tiling arrays have all the applications of single-strain tiling arrays. the same array design can be used to perform segmentation analysis against any reference strain on the array. pan-genome aCGH offers an economical alterative to sequencing for determining the genomic makeup of uncharacterized strains. pan-genome arrays could be used for the detection and genotyping of pathogens from a large environment without needing to isolate the individual cells. pan-genomic aCGH has become an increasingly popular and cost-effective approach to compare and characterize genomic contents of unknown bacterial isolates. the authors would like to thank Arthur Delcher for a helpful critique of the manuscript draft, and Herv\u00e9 Tettelin and David Riley for helping running their pan-genome analysis software. this work was supported in part by the US Department of Homeland Security Science and Technology Directorate under award NBCH2070002."}